<style>
    table {
        font-size: 0.8em;
    }

    i.btnRow {
        font-size: 2.5em;
    }

    #groupPDF {
        padding: 10px 10px 5px 10px;
        background-color: #777;
    }

    #menuPDF {
        display: flex;
        margin-bottom: 5px;
    }

    #pdf_viewer {
        width: 100%;
    }

    #listFiles {
        width: 300px;
        border: 1px solid;
        margin-right: 50px;
        height: 36px;
    }

    .labelListFiles {
        color: white;
        margin-bottom: 0px;
        margin-right: 5px;
        line-height: 2em;
    }

    #closePDF {
        margin-left: auto;
    }

    #labelCurrentPage {
        color: black;
        margin-bottom: 0px;
        padding: 0 5px;
        line-height: 1.2em;
        margin-top: 5px;
    }

    #prevPDF {
        font-size: 1.5em;
        color: #007431;
        line-height: 1.19em;
    }

    #nextPDF {
        font-size: 1.5em;
        color: #007431;
        line-height: 1.19em;
    }

    .groupBtnPages {
        background: white;
        padding: 5px 5px 0;
        display: flex;
    }

    .disabledBtn {
        color: #777 !important;
    }
</style>

<div id="commandPanel">
    <h3 class="titlePage"></h3>
    <i class="bi bi-plus-circle" id="btnAdd"></i>
</div>

<table  id="ОтчетПоРаботе2022"
        name="ОтчетПоРаботе2022" 
        url="/app/getCurrentReportOperator" 
        callbackBeforeInitTable="callbackBeforeDoneNaladka" 
        filter="filterForNaladka" 
        callbackAfterInitTable="callbackAfterDoneNaladka" 
        append="end" 
        style="display: none;"
        init header>
    <tr class="config" style="display: none;">
        <td title="Готов" 
            name="Проведен"
            style="width: 6%;"> 
            <input  type="checkbox" 
                    sync="none" 
                    class="dataCell checkboxInTable"></td>
        <td title="Станок" 
            name="Станок" 
            key="ИнвентарныйНомер" 
            style="width: 6%;">
            <input  type="text" 
                    minLength=1 
                    url="/app/autocompleteStanok"   
                    checkValid  
                    class="dataCell textAlignCenter" 
                    style="padding: 0px;"></td>
        <td title="Номер детали" 
            name="Деталь" 
            key="АртикулНаименование" 
            style="width: 25%;">
            <input  type="text" 
                    minLength=1 
                    url="/app/autocompleteArticle"  
                    checkValid 
                    class="dataCell"></input></td>
        <td title="Этап" 
            name="ЭтапПроизводства" 
            key="КодНовый" 
            style="width: 6%;">
            <input  type="text" 
                    inputmode="numeric" 
                    minLength=0 
                    url="/app/autocompleteCodeOperation"  
                    checkValid 
                    class="dataCell textAlignCenter"></input></td>
        <td title="МЛ"  
            name="Заказ" 
            key="Номер" 
            style="width: 6%;">
            <input  type="text" 
                    inputmode="numeric" 
                    minLength=0 
                    url="/app/autocompleteZakaz"  
                    checkValid 
                    class="dataCell textAlignCenter"></input></td>
        <td title="К-во изгот" 
            name="КоличествоИзготовлено" 
            style="width: 7%;">
            <input  type="number" 
                    inputmode="numeric"  
                    checkValid  
                    min="0" 
                    sync="none" 
                    class="dataCell quantity textAlignEnd" 
                    style=""></td>
        <td title="Время маш." 
            name="МашинноеВремя" 
            style="width: 7%">
            <input  type="text" 
                    inputmode="numeric" 
                    checkValid 
                    placeholder="мм:сс"
                    limitHourse="99" 
                    data-mask="99:A9"
                    sync="none" 
                    class="dataCell textAlignCenter"></input></td>
        <td title="Время полное" 
            name="ПолноеВремя" 
            style="width: 7%">
            <input  type="text" 
                    inputmode="numeric" 
                    checkValid 
                    placeholder="мм:сс"
                    limitHourse="99" 
                    data-mask="99:A9" 
                    sync="none" 
                    class="dataCell textAlignCenter"></input></td>
        <td title="Дет за 1 уст" 
            name="КоличествоДеталейЗаОднуУстановку" 
            style="width: 7%">
            <input  type="number" 
                    inputmode="numeric"  
                    checkValid  
                    min="0" 
                    sync="none" 
                    class="dataCell quantity textAlignEnd" 
                    style=""></td>
        <td title="Время наладки" 
            name="НаладкаВремя" 
            style="width: 7%">
            <input  type="number" 
                    inputmode="numeric"  
                    checkValid  
                    min="0" 
                    sync="none" 
                    class="dataCell textAlignEnd" 
                    style=""></td>
        <td title="" 
            style="width: 16%;"><div class="groupBtnRow">
                <i class="bi bi-check-circle btnRow btnOk colorGreen" style="display: none;"></i>
                <i class="bi bi-pencil btnEdit btnRow colorGreen"></i>
                <i class="bi bi-trash btnDelete btnRow colorRed" name="ПометкаУдаления" style="display: none;"></i>
                <i class="bi bi-play-circle btnPlay btnRow colorGreen"></i>
                <i class="bi bi-pause-circle btnPause btnRow colorRed" style="display: none;"></i>
                <i class="bi bi-file-earmark-ruled btnFile btnRow colorGreen"></i>
            </div></td>
    </tr>

    <tr id=rowPDF" style="display: none;">
        <td colspan="99">
            <div id="groupPDF">
                <div id="menuPDF">
                    <label class="labelListFiles">Файл:</label>
                    <select id="listFiles">
                        <option value="10852.pdf">10852.pdf</option>
                    </select>

                    <label class="labelListFiles">Страница:</label>
                    <div class="groupBtnPages">
                        <i id="prevPDF" class="bi bi-arrow-left-circle disabledBtn"></i>
                        <label id="labelCurrentPage">1 из 1</label>
                        <i id="nextPDF" class="bi bi-arrow-right-circle disabledBtn"></i>
                    </div>
                    
                    <button id="closePDF">Закрыть</button>
                </div>
                
                <canvas id="pdf_viewer"></canvas>
            </div>    
        </td>  
    </tr>
</table>

<script>
    $(document).ready(function() {
        let tableID = '#ОтчетПоРаботе2022';
        let startTimeWork = new Date();
        let timerIncrement = null;
        var pdfDoc;
        var numPage = 1;

        initTables();

        // callback при получении данных от сервера по wss
        callbackWSS = async function(data){callbackTable(data)};

        // callback при изменении данных в строке для определения показать или убрать строку
        filterForNaladka = function(data, result = true) {
            const reportDate = new Date(data['Дата']);

            try {
                if ( reportDate < startTimeWork ){ result = false; }
                if ( data['ПометкаУдаления'] )   { result = false; }
                if ( !data['ЭтоОтчетНаладчика'] )   { result = false; }
            } catch (error) { console.log(error) }

            console.log('filterForNaladka', result, data, data['ПометкаУдаления'], reportDate, startTimeWork);
            return result;
        }

        // callback перед отрисовкой таблицы
        callbackBeforeDoneNaladka = function(data) {
            console.log('callbackBeforeDoneNaladka', data.startTimeWork);
            
            if (data.startTimeWork == '0001-01-01T00:00:00Z') {
                $('.titlePage').text('Смена еще не начата');
                $('#btnAdd').hide();
                $(tableID).hide();
            }else{
                startTimeWork = new Date(data.startTimeWork);
                $('.titlePage').text('Список наладок за текущую смену c ' + startTimeWork.toLocaleString());
                $('#btnAdd').show();
                $(tableID).show();
            }
        }

        // callback после отрисовки таблицы
        callbackAfterDoneNaladka = function(data) { }

        // клик по кнопке Добавить отчет
        $('#btnAdd').on('click', function(event){
            clickAnimate(this);
            NProgress.start();
            highlight = false;

            logToServer('Нажата кнопка "Добавить отчет"');

            const data = { naladka:true };
            if(stanok.uid !== ''){ data.stanok = stanok; };

            $.ajax({url: '/app/createReport', method: 'POST', contentType: 'application/json',
                data: JSON.stringify(data), 
                success: function(data, status) { console.log('logToServer', status, data); }
            }).always(function() {
                NProgress.done();
                highlight = true;
            });
        });

        // клик по кнопке Редактировать
        $(tableID).on('click', '.btnEdit', function(event){
            const row = $(this).closest('tr');
            const data = $(row).data('data');

            $(tableID).find('.btnDelete').hide();
            $(tableID).find('.btnPlay').show();
            $(tableID).find('.btnEdit').show();
            $(tableID).find('.btnOk').hide();
            $(tableID).find('input').prop('disabled', true);

            $(row).find('.btnOk').show();
            $(row).find('.btnDelete').show();
            $(row).find('.btnEdit').hide();
            $(row).find('.btnPlay').hide();
            $(row).find('input').prop('disabled', false);

            clickAnimate($(row).find('.btnOk'));
            logToServer('Нажата кнопка "Редактировать"', data);
        });

        // клик по кнопке Применить
        $(tableID).on('click', '.btnOk', function(event){
            const row = $(this).closest('tr');
            const data = $(row).data('data');

            $(row).find('.btnOk').hide();
            $(row).find('.btnEdit').show();
            $(row).find('.btnPlay').show();
            $(row).find('.btnDelete').hide(); 
            $(row).find('input').prop('disabled', true);

            clickAnimate($(row).find('.btnEdit'));
            logToServer('Нажата кнопка "Редактировать"', data);
            sendNotificationOnChangeRowTable(this);
        });

        // клик по кнопке Удалить
        $(tableID).on('click', '.btnDelete', function(event){
            clickAnimate(this);
            if (confirm("Вы уверены, что хотите удалить отчет?")) {
                const row = $(this).closest('tr');
                const data = $(row).data('data');

                data.edited['ПометкаУдаления'] = true;
                $(row).data('data', data);

                logToServer('Нажата кнопка "Удалить"', data);
                sendNotificationOnChangeRowTable(this);
            }
        });

        // клик по кнопке Старт таймера
        $(tableID).on('click', '.btnPlay', function(event){ 
            const table = $(this).closest('table');
            const row = $(this).closest('tr');

            $(table).find('.btnPause').hide();
            $(table).find('.btnPlay').show();

            $(this).hide();
            $(row).find('.btnPause').show();
            clickAnimate($(row).find('.btnPause'));

            function wrapper() {
                const btnPause = $('.btnPause:visible');

                if (btnPause.length > 0) {
                    const row = $(btnPause).closest('tr');
                    const data = $(row).data('data');
                    const element = $(row).find('.dataCell[name="НаладкаВремя"]');
                    const currNaladka = parseFloat(element.val()||0) + 1;

                    data.edited['НаладкаВремя'] = currNaladka;
                    $(row).data('data', data);

                    sendNotificationOnChangeRowTable(element);
                    timerIncrement = setTimeout(wrapper, 60000);
                }
            }

            clearInterval(timerIncrement);
            timerIncrement = setTimeout(wrapper, 60000);
        });

        // клик по кнопке Пауза таймера
        $(tableID).on('click', '.btnPause', function(event){
            const row = $(this).closest('tr');

            $(this).hide();
            $(row).find('.btnPlay').show();
            clickAnimate($(row).find('.btnPlay'));
            
            clearInterval(timerIncrement);
        });

        // клик по кнопке Просмотр файлов
        $(tableID).on('click', '.btnFile', function(event){
            clickAnimate(this);

            const row = $(this).closest('tr');
            const currDetal = $(row).find('.dataCell[name="Деталь"]').attr('uid')||'';
            const selectList = $('#listFiles');

            if (currDetal !== '') {
                $.get("/app/getFiles?detal=" + currDetal, function(response) {
                    console.log('response', response);

                    selectList.html('');

                    if (response.files.length > 0) {
                        response.files.forEach((file) => {
                            console.log(file);

                            const option = $('<option>');
                            option.val(file.uid);
                            option.text(file.name);
                            selectList.append(option);
                        });

                        $('#groupPDF').parent().parent().insertAfter(row);
                        $('#groupPDF').parent().parent().show();

                        selectList.trigger('change');
                    }
                });
            }
        });

        // клик по кнопке Закрыть просмотр файлов
        $('#closePDF').on('click', function (event) {
            $('#groupPDF').parent().parent().hide();
            NProgress.done();
        })
    
        // обработка выбора файла из списка
        $('#listFiles').on('change', function (event) {
            var selectedOption = $(this).val();
            console.log('Выбран пункт: ' + selectedOption);

            const canvas = document.getElementById('pdf_viewer');
            const context = canvas.getContext('2d');
            context.clearRect(0, 0, canvas.width, canvas.height);

            NProgress.start();

            $('#prevPDF').prop('disabled', true);
            $('#nextPDF').prop('disabled', true);
            $('#labelCurrentPage').text(`1 из 1`);

            pdfjsLib.getDocument('/app/getFile?file=' + selectedOption).promise
                .then(function(pdfDoc_) {
                    pdfDoc = pdfDoc_;
                    renderPage(1);
                })
                .catch(function(error) {
                    console.error('Ошибка при чтении PDF:', error);
                    toastr["error"](error, "Ошибка при чтении PDF");
                    NProgress.done();
                });
        })

        // предыдущая страница pdf файла
        $("#prevPDF").click(function() {
            if ($(this).hasClass('disabledBtn')) {
                return;    
            }

            clickAnimate(this);

            if (numPage <= 1) {
                return;
            }
            numPage--;
            renderPage(numPage);
        });

        // следующая страница pdf файла
        $("#nextPDF").click(function() {
            if ($(this).hasClass('disabledBtn')) {
                return;    
            }

            clickAnimate(this);

            if (numPage >= pdfDoc.numPages) {
                return;
            }
            numPage++;
            renderPage(numPage);
        });

        // отрисовка страницы pdf файла
        function renderPage(num) {
            numPage = num;

            $('#labelCurrentPage').text(`${numPage} из ${pdfDoc.numPages}`)

            $('#prevPDF').toggleClass('disabledBtn', numPage <= 1);
            $('#nextPDF').toggleClass('disabledBtn', numPage >= pdfDoc.numPages);

            pdfDoc.getPage(num).then(function(page) {
                var viewport = page.getViewport({scale: 1.0});
                var canvas = document.getElementById('pdf_viewer');
                var context = canvas.getContext('2d');
                canvas.height = viewport.height;
                canvas.width = viewport.width;

                var renderContext = {
                    canvasContext: context,
                    viewport: viewport
                };
                page.render(renderContext);
                NProgress.done();
            });
        }
    });
</script>

