<style>
  #btnAdd {
    margin-left: auto;
    font-size: 3em;
    color: #007431;
    margin-right: 10px;
  }

  #commandPanel {
    display: flex;
    justify-content: left;
    align-items: center;
    flex-wrap: wrap;
    margin-bottom: 0;
  }

  #dateContainer {
    display: flex;
    align-items: center;
  }

  .btn-arrow {
    font-size: xxx-large;
    margin: 0 10px;
    color: darkgreen;
  }

  #date {
    font-size: large;
    text-align: center;
  }

  #sotrudnik {
    font-size: large;
    width: 15em;
    margin: 0 1em;
  }

  #sotrudnikTags {
    display: grid;
    grid-template-columns: repeat(9, 1fr);
    gap: 0.5vw;
    margin-bottom: 10px;
  }

  .tag {
    font-size: 1.5vw;
    border-radius: 5px;
    background-color: rgb(255, 255, 255);
    padding: 0.3em 0.2em;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    line-height: normal;
    border: 1px solid darkgrey;
    white-space: pre;
  }

  @media (min-width: 1250px) {
    .tag {
      font-size: 20px;
    }
  }

  .tag.selected {
    background-color: orange;
  }


  #reloadPage {
    margin-left: auto;
    font-size: xxx-large;
    color: #007431;
    margin-right: 10px;
    height: 65px;
  }

  #btnAdd {
    margin-left: auto;
    font-size: xxx-large;
    color: #007431;
    margin-right: 10px;
  }

  
  #sumTable {
    margin-bottom: 15px;
  }

  #titleRow {
    display: flex;
    flex-direction: row;
    align-items: center;
  }
</style>

<div id="commandPanel">
  <div id="dateContainer">
    <i class="bi bi-arrow-left-circle btn-arrow" id="prevDay"></i>
    <input type="date" class="form-control" id="date" placeholder="дд/мм/гггг" aria-describedby="basic-addon3" />
    <i class="bi bi-arrow-right-circle btn-arrow" id="nextDay"></i>
  </div>

  <input
    type="text"
    class="form-control"
    id="sotrudnik"
    placeholder="Сотрудник"
    url="/app/autocompleteSotrydnik"
    aria-describedby="basic-addon3"
    callbackSelect="callbackSelectSotrudnik"
  />
  <i class="bi bi-arrow-clockwise" id="reloadPage"></i>
</div>

<div id="sotrudnikTags"></div>

<div id="sumTable">
  <table>
    <thead>
      <tr>
        <th title="Станок" class="textAlignCenter" style="width: 6%">Станок</td>
        <th title="Деталь" style="width: 31%">Деталь</td>
        <th title="Этап" class="textAlignCenter" style="width: 5%">Этап</td>
        <th title="Этап" style="width: 18%">Этап</td>
        <th title="К-во" style="width: 4%">К-во</td>
      </tr>
    </thead>
    <tbody></tbody>
  </table>
</div>

<div id="titleRow">
  <div class="titlePage">Таблица редактирования отчетов</div>
  <i class="bi bi-plus-circle" id="btnAdd"></i>
</div>
<table
  id="ОтчетПоРаботе2022"
  name="ОтчетПоРаботе2022"
  url="/app/reportsOperatorForDay"
  filter="callbackFilter"
  callbackBeforeInitTable="createTagsOfSotrudnik"
  callbackAfterInitTable="renderSumTable"
  append="up"
  sort="0"
  header
>
  <tr class="config" style="display: none">
    <td title="Станок" name="Станок" key="ИнвентарныйНомер" headerClass="colunmForEdit" style="display: none">
      <div class="dataCell"></div>
    </td>
    <td title="Станок" name="Станок" key="ИнвентарныйНомер" headerClass="colunmForEdit" style="width: 8%">
      <input
        type="text"
        minLength="1"
        url="/app/autocompleteStanok"
        checkValid
        class="dataCell textAlignCenter"
        style="padding: 0px"
      />
    </td>
    <td title="Деталь" name="Деталь" key="АртикулНаименование" style="width: 29%">
      <div class="dataCell"></div>
    </td>
    <td title="Этап" name="ЭтапПроизводства" key="КодНовый" style="width: 6%">
      <div class="dataCell textAlignCenter"></div>
    </td>
    <td title="Этап" name="ЭтапПроизводства" key="Наименование" style="width: 18%">
      <div class="dataCell"></div>
    </td>
    <td title="МЛ" name="Заказ" key="Номер" style="width: 5%">
      <div class="dataCell textAlignCenter"></div>
    </td>
    <td title="К-во" name="КоличествоИзготовлено" headerClass="colunmForEdit" style="width: 5%">
      <input type="number" inputmode="numeric" checkValid min="0" sync="none" class="dataCell quantity textAlignEnd" />
    </td>
    <td title="" name="Проведен" headerClass="colunmForEdit" style="width: 4%">
      <input type="checkbox" sync="none" class="dataCell checkboxInTable" />
    </td>
    <td title="" style="width: 8%">
      <div class="groupBtnRow">
        <i class="bi bi-check-circle btnRow btnOk colorGreen" style="display: none"></i>
        <i class="bi bi-pencil btnEdit btnRow colorGreen"></i>
        <i class="bi bi-trash btnDelete btnRow colorRed" name="ПометкаУдаления" style="display: none"></i>

        <!-- <i class="bi bi-play-circle btnPlay btnRow colorGreen"></i> -->
        <i class="bi bi-pause-circle btnPause btnRow colorRed" style="display: none"></i>
      </div>
    </td>
  </tr>
</table>

<script>
  $(document).ready(function () {
    let tableID = '#ОтчетПоРаботе2022';
    let selectedTagUID = ''
    let dateParam;

    initInputDate('#date');
    initInputAutocomplete('#sotrudnik');
    addSubscribeWSS('ОтчетПоРаботе2022_all');

    // callback при получении данных от сервера по wss
    callbackWSS = async function (data) {
      callbackTable(data);
    };

    // callback при изменении данных в строке для определения показать или убрать строку
    callbackFilter = function (data, result = true) {
      const reportDate = new Date(data['ДатаОтчета']);
      console.log('dateParam', dateParam);
      console.log('data[ДатаОтчета]', data['ДатаОтчета'].slice(0, -9));
      try {
        if (data['ДатаОтчета'].slice(0, -9) !== dateParam) {
          console.log('Filter Дата отчета не співпадає');
          result = false;
        }
        if (data['ПометкаУдаления']) {
          console.log('Filter ПометкаУдаления');
          result = false;
        }
        if (data['Сотрудник']['uid'] !== $('#sotrudnik').attr('uid')) {
          console.log('Filter Сотрудник', data['Сотрудник']['uid'], $('#sotrudnik').attr('uid'));
          result = false;
        }
        $('#countDetalForCurrentReport').text(data['КоличествоИзготовлено']);
      } catch (error) {
        console.log(error);
      }

      return result;
    };

    function initInputDate(element) {
      $(element).on('change', function () {
        updateTable();
      });
    }

    updateTable = function () {
      const sotrudnik = $('#sotrudnik');
      const date = $('#date');
      dateParam = JSON.stringify(new Date($(date).val()));
      dateParam = dateParam.slice(1, -15);
      console.log('dateParam', dateParam);

      const param = {
        userUID: $(sotrudnik).attr('uid'),
        date: dateParam,
      };

      $(tableID).data('param', param);
      initTable(tableID);
    };

    // клик по кнопке Добавить отчет
    $('#btnAdd').on('click', function (event) {
      clickAnimate(this);
      NProgress.start();
      highlight = false;

      logToServer('Нажата кнопка "Добавить отчет"');
      const data = {
        operator: true,
        userUID: $(sotrudnik).attr('uid'),
        date: dateParam,
      };

      console.log('Дані, що будуть відправлені на сервер:', data);
      $.ajax({
        url: '/app/createReport',
        method: 'POST',
        contentType: 'application/json',
        data: JSON.stringify(data),
        success: function (data, status) {
          console.log('logToServer', status, data);
        },
      }).always(function () {
        NProgress.done();
        highlight = true;
      });
    });

    $('#reloadPage').on('click', function (event) {
      clickAnimate(this);
      updateTable();
    })

    // клик по кнопке Редактировать
    $(tableID).on('click', '.btnEdit', function (event) {
      const row = $(this).closest('tr');
      const data = $(row).data('data');

      $(tableID).find('.btnDelete').hide();
      $(tableID).find('.btnPlay').show();
      $(tableID).find('.btnEdit').show();
      $(tableID).find('.btnOk').hide();
      $(tableID).find('input').prop('disabled', true);

      $(row).find('.btnOk').show();
      $(row).find('.btnDelete').show();
      $(row).find('.btnEdit').hide();
      $(row).find('.btnPlay').hide();
      $(row).find('input').prop('disabled', false);

      clickAnimate($(row).find('.btnOk'));
      logToServer('Нажата кнопка "Редактировать"', data);
    });

    // клик по кнопке Применить
    $(tableID).on('click', '.btnOk', function (event) {
      const row = $(this).closest('tr');
      const data = $(row).data('data');

      $(row).find('.btnOk').hide();
      $(row).find('.btnEdit').show();
      $(row).find('.btnPlay').show();
      $(row).find('.btnDelete').hide();
      $(row).find('input').prop('disabled', true);

      clickAnimate($(row).find('.btnEdit'));
      logToServer('Нажата кнопка "Применить"', data);
      sendNotificationOnChangeRowTable(this);
    });

    // клик по кнопке Удалить
    $(tableID).on('click', '.btnDelete', function (event) {
      clickAnimate(this);
      if (confirm('Вы уверены, что хотите удалить отчет?')) {
        const row = $(this).closest('tr');
        const data = $(row).data('data');

        data.edited['ПометкаУдаления'] = true;
        $(row).data('data', data);

        logToServer('Нажата кнопка "Удалить"', data);
        sendNotificationOnChangeRowTable(this);
      }
    });

    callbackSelectSotrudnik = function (data) {
      updateTable();
    };

    createTagsOfSotrudnik = function (data) {
      console.log('createTagsOfSotrudnik');
      const listOfSotrudnik = data.users;
      const $container = $('#sotrudnikTags');
      $container.html('');

      listOfSotrudnik.forEach(item => {
        let elementClass;
        if (item.uid === selectedTagUID) {
          elementClass = 'tag selected'
          console.log('elementClass = tag selected');
        } else {
          elementClass= 'tag'
          console.log('elementClass = tag');
        }
        const $div = $('<div>', {
          class: elementClass,
          text: item.value.replace(' ', '\n'),
        }).attr({
          uid: item.uid,
          value: item.value,
        });

        $div.on('click', handleClickOnTag);

        $container.append($div);
      });
    };



    function handleClickOnTag() {
      clickAnimate(this);
      const $input = $('#sotrudnik');
      const value = $(this).attr('value');
      $input.val(value);
      const uid = $(this).attr('uid');
      $input.attr('uid', uid);
      selectedTagUID=uid;
      console.log('uid', uid)
      console.log('selectedTagUID', selectedTagUID);
      updateTable();
    }

    function setCurrentDate() {
      let today = new Date();
      let formattedDate = today.toISOString().split('T')[0];
      $('#date').val(formattedDate);
      updateTable();
    }
    setCurrentDate();

    function adjustDate(days) {
      let currentDate = $('#date').val();
      let date = new Date(currentDate);
      date.setDate(date.getDate() + days);

      let newDate = date.toISOString().split('T')[0];
      $('#date').val(newDate);

      console.log('New Date:', newDate);
      updateTable();
    }

    $('#prevDay').on('click', function (event) {
      clickAnimate(this);
      adjustDate(-1);
    });

    $('#nextDay').on('click', function (event) {
      clickAnimate(this);
      adjustDate(1);
    });

    renderSumTable = function (data) {
      console.log('renderSumTable', data.listSumm);
      let $tbody = $('#sumTable table tbody');
      $tbody.empty();
      data.listSumm.forEach(item => {
        let $tr = $('<tr></tr>');

        $tr.append($('<td class="textAlignCenter"></td>').text(item.Станок));
        $tr.append($('<td></td>').text(item.Деталь));
        $tr.append($('<td class="textAlignCenter"></td>').text(item.Код));
        $tr.append($('<td "></td>').text(item.Этап));
        $tr.append($('<td class="textAlignEnd"></td>').text(item.Количество));

        $tbody.append($tr);
      });
    };
  });
</script>
