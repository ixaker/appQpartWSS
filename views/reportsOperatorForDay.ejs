<style>
  #btnAdd {
    margin-left: auto;
    font-size: 3em;
    color: #007431;
    margin-right: 10px;
  }

  #commandPanel {
    display: flex;
    justify-content: space-between;
  }

  #date {
    font-size: 1em;
    width: 8em;
  }

  #sotrudnik {
    font-size: 1em;
    width: 15em;
  }
</style>

<div id="commandPanel">
  <input type="date" class="form-control" id="date" placeholder="дд/мм/гггг" aria-describedby="basic-addon3" />
  <input
    type="text"
    class="form-control"
    id="sotrudnik"
    placeholder="Сотрудник"
    url="/app/autocompleteSotrydnik"
    aria-describedby="basic-addon3"
    callbackSelect="callbackSelectSotrudnik"
  />
  <i class="bi bi-plus-circle" id="btnAdd"></i>
</div>

<table
  id="ОтчетПоРаботе2022"
  name="ОтчетПоРаботе2022"
  url="/app/reportsOperatorForDay"
  filter="callbackFilter"
  append="up"
  sort="0"
  header
>
  <tr class="config" style="display: none">
    <td title="Станок" name="Станок" key="ИнвентарныйНомер" headerClass="colunmForEdit" style="display: none">
      <div class="dataCell"></div>
    </td>
    <td title="Станок" name="Станок" key="ИнвентарныйНомер" headerClass="colunmForEdit" style="width: 7%">
      <input
        type="text"
        minLength="1"
        url="/app/autocompleteStanok"
        checkValid
        class="dataCell textAlignCenter"
        style="padding: 0px"
      />
    </td>
    <td title="Деталь" name="Деталь" key="АртикулНаименование" style="width: 25%">
      <div class="dataCell"></div>
    </td>
    <td title="Этап" name="ЭтапПроизводства" key="КодНовый" style="width: 8%">
      <div class="dataCell textAlignCenter"></div>
    </td>
    <td title="Этап" name="ЭтапПроизводства" key="Наименование" style="width: 18%">
      <div class="dataCell"></div>
    </td>
    <td title="МЛ" name="Заказ" key="Номер" style="width: 6%">
      <div class="dataCell textAlignCenter"></div>
    </td>
    <td title="К-во" name="КоличествоИзготовлено" headerClass="colunmForEdit" style="width: 5%">
      <input type="number" inputmode="numeric" checkValid min="0" sync="none" class="dataCell quantity textAlignEnd" />
    </td>
    <td title="" name="Проведен" headerClass="colunmForEdit" style="width: 4%">
      <input type="checkbox" sync="none" class="dataCell checkboxInTable" />
    </td>
    <td title="" style="width: 10%">
      <div class="groupBtnRow">
        <i class="bi bi-check-circle btnRow btnOk colorGreen" style="display: none"></i>
        <i class="bi bi-pencil btnEdit btnRow colorGreen"></i>
        <i class="bi bi-trash btnDelete btnRow colorRed" name="ПометкаУдаления" style="display: none"></i>

        <!-- <i class="bi bi-play-circle btnPlay btnRow colorGreen"></i> -->
        <i class="bi bi-pause-circle btnPause btnRow colorRed" style="display: none"></i>
      </div>
    </td>
  </tr>
</table>

<script>
  $(document).ready(function () {
    let tableID = '#ОтчетПоРаботе2022';
    let dateParam;

    initInputDate('#date');
    initInputAutocomplete('#sotrudnik');
    addSubscribeWSS('ОтчетПоРаботе2022_all');

    // callback при получении данных от сервера по wss
    callbackWSS = async function (data) {
      callbackTable(data);
    };

    // callback при изменении данных в строке для определения показать или убрать строку
    callbackFilter = function (data, result = true) {
      const reportDate = new Date(data['ДатаОтчета']);
      console.log('dateParam', dateParam);
      console.log('data[ДатаОтчета]', data['ДатаОтчета'].slice(0, -9));
      try {
        if (data['ДатаОтчета'].slice(0, -9) !== dateParam) {
          console.log('Filter Дата отчета не співпадає');
          result = false;
        }
        if (data['ПометкаУдаления']) {
          console.log('Filter ПометкаУдаления');
          result = false;
        }
        if (!data['ЭтоОтчетОператора']) {
          console.log('Filter ЭтоОтчетОператора');
          result = false;
        }
        if (data['Сотрудник']['uid'] !== $('#sotrudnik').attr('uid')) {
          console.log('Filter Сотрудник', data['Сотрудник']['uid'], $('#sotrudnik').attr('uid'));
          result = false;
        }
        $('#countDetalForCurrentReport').text(data['КоличествоИзготовлено']);
      } catch (error) {
        console.log(error);
      }

      return result;
    };

    function initInputDate(element) {
      $(element).on('change', function () {
        updateTable();
      });
    }

    updateTable = function () {
      const sotrudnik = $('#sotrudnik');
      const date = $('#date');
      dateParam = JSON.stringify(new Date($(date).val()));
      dateParam = dateParam.slice(1, -15);
      console.log('dateParam', dateParam);

      const param = {
        userUID: $(sotrudnik).attr('uid'),
        date: dateParam,
      };

      $(tableID).data('param', param);
      initTable(tableID);
    };

    // клик по кнопке Добавить отчет
    $('#btnAdd').on('click', function (event) {
      clickAnimate(this);
      NProgress.start();
      highlight = false;

      logToServer('Нажата кнопка "Добавить отчет"');
      const data = {
        operator: true,
        userUID: $(sotrudnik).attr('uid'),
        date: dateParam,
      };

      console.log('Дані, що будуть відправлені на сервер:', data);
      $.ajax({
        url: '/app/createReport',
        method: 'POST',
        contentType: 'application/json',
        data: JSON.stringify(data),
        success: function (data, status) {
          console.log('logToServer', status, data);
        },
      }).always(function () {
        NProgress.done();
        highlight = true;
      });
    });

    // клик по кнопке Редактировать
    $(tableID).on('click', '.btnEdit', function (event) {
      const row = $(this).closest('tr');
      const data = $(row).data('data');

      $(tableID).find('.btnDelete').hide();
      $(tableID).find('.btnPlay').show();
      $(tableID).find('.btnEdit').show();
      $(tableID).find('.btnOk').hide();
      $(tableID).find('input').prop('disabled', true);

      $(row).find('.btnOk').show();
      $(row).find('.btnDelete').show();
      $(row).find('.btnEdit').hide();
      $(row).find('.btnPlay').hide();
      $(row).find('input').prop('disabled', false);

      clickAnimate($(row).find('.btnOk'));
      logToServer('Нажата кнопка "Редактировать"', data);
    });

    // клик по кнопке Применить
    $(tableID).on('click', '.btnOk', function (event) {
      const row = $(this).closest('tr');
      const data = $(row).data('data');

      $(row).find('.btnOk').hide();
      $(row).find('.btnEdit').show();
      $(row).find('.btnPlay').show();
      $(row).find('.btnDelete').hide();
      $(row).find('input').prop('disabled', true);

      clickAnimate($(row).find('.btnEdit'));
      logToServer('Нажата кнопка "Применить"', data);
      sendNotificationOnChangeRowTable(this);
    });

    // клик по кнопке Удалить
    $(tableID).on('click', '.btnDelete', function (event) {
      clickAnimate(this);
      if (confirm('Вы уверены, что хотите удалить отчет?')) {
        const row = $(this).closest('tr');
        const data = $(row).data('data');

        data.edited['ПометкаУдаления'] = true;
        $(row).data('data', data);

        logToServer('Нажата кнопка "Удалить"', data);
        sendNotificationOnChangeRowTable(this);
      }
    });

    callbackSelectSotrudnik = function (data) {
      updateTable();
    };
  });
</script>
