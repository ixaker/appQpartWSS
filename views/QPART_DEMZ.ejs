<style>
  #content {
    max-width: 500px;
    margin: 0 auto;
  }

  header h1 {
    font-size: xx-large;
  }

  input[type='date']::-webkit-calendar-picker-indicator {
    opacity: 0;
  }

  input[type='date'] {
    /* -moz-appearance: textfield; */
  }

  input[type='date']::-ms-clear {
    display: none;
  }

  .titleContainer {
    width: 100%;
    align-items: center;
    margin-bottom: 10px;
  }

  .commandPanel {
    display: flex;
  }

  #qpart_demz {
    width: 100%;
    font-size: medium;
    padding: 0 5px;
  }

  .ui-autocomplete {
    z-index: 1000;
  }

  .form-control {
    font-size: x-large;
  }
</style>

<div id="main">
  <div id="commandPanel" class="commandPanel">
    <div class="titleContainer">
      <i class="bi bi-arrow-left-right" id="pageIcon"></i>

      <h3 class="titlePage">QPART - ДЕМЗ</h3>
      <div id="btnGroup">
        <div id="btnQpart">
          <img
            src="img/plus-circle.svg?v=<%= version %>"
            alt="plus icon"
            class="commandImg commandBtn"
            id="addNewQpart"
          />
          <div class="btnDesctiption">QPART</div>
        </div>
        <div id="btnDemz">
          <img
            src="img/plus-circle.svg?v=<%= version %>"
            alt="plus icon"
            class="commandImg commandBtn"
            id="addNewDemz"
          />
          <div class="btnDesctiption">ДЕМЗ</div>
        </div>
      </div>
    </div>
  </div>
  <div
    id="qpart_demz"
    url="/app/qpart_demz"
    callbackAfterLoadData="callbackAfterLoadData"
    callbackForRender="callbackForRender"
    callbackClick="callbackClick"
    type="plate"
    paggination="false"
  ></div>
</div>

<!-- doc info -->
<style>
  .form-group {
    display: flex;
    align-items: center;
  }

  .form-group label {
    margin-bottom: 0;
    transition: 2s;
  }

  #docType {
    text-align: center;
    font-weight: 600;
  }
  .commandBtn {
    margin-right: 5px;
  }

  #newDocForm {
    font-size: large;
    display: flex;
    justify-content: space-between;
    flex-direction: column;
  }

  #forTable {
    margin-bottom: 10px;
  }

  .firstRow {
    display: flex;
    gap: 10px;
  }

  .flex1 {
    flex: 1;
  }

  .inputTable {
    border-collapse: collapse;
  }

  .inputTable td:focus-within {
    background-color: aliceblue;
  }

  /* .inputTable tbody tr:last-child {
    background-color: #f0f0f0;
    color: #a0a0a0;
    opacity: 0.6;
  }


  .inputTable tbody tr:last-child input {
    background-color: #f0f0f0;
    color: #a0a0a0;
  } */

  thead {
    font-size: medium;
  }

  .controledInput {
    border: none;
  }

  .controledInput:focus {
    border: none;
    box-shadow: none;
    background-color: aliceblue;
  }

  .stage {
    width: auto;
  }

  .number {
    width: 70px;
    max-width: 70px;
  }

  .defect {
    width: 50px;
    max-width: 50px;
  }

  #defectCheck {
    transform: scale(2);
  }

  #tableForm {
    margin-bottom: 10px;
  }

  #makePhotoButton {
    font-size: xxx-large;

    line-height: normal;
  }
  #downloadPhotoButton {
    font-size: xxx-large;
    line-height: normal;
  }

  .imgContainer {
    display: grid;
    grid-template-columns: repeat(3, minmax(100px, 1fr));
    gap: 10px;
    justify-content: start;
    margin-bottom: 10px;
  }

  .attachedImg {
    width: 100%;
  }

  .attachedImg img {
    width: 100%;
  }

  #btnGroup {
    margin-left: auto;
    display: flex;
  }

  #btnQpart,
  #btnDemz {
    margin-right: 5px;
    margin-left: 15px;
    height: fit-content;
  }

  #addNewDemz,
  #addNewQpart {
    margin: 0;
  }
  .btnDesctiption {
    margin-top: 5px;
    font-size: x-small;
    width: 100%;
    text-align: center;
    display: none;
    color: green;
    font-weight: bold;
  }

  #docTypeQpart,
  #docTypeDemz {
    display: none;
    font-size: x-large;
    text-align: center;
    margin-bottom: 10px;
    background-color: white;
    padding: 5px;
    border-radius: 5px;
  }

  #groupButton {
    justify-content: flex-start;
  }

  #details {
    margin-bottom: 10px;
    border: 1px solid #bbbbbb;
    background-color: #ffffff;
    border-radius: 7px;
    box-shadow: 2px 3px 5px #999;
    padding: 5px;
    display: flex;
    flex-direction: column;
  }

  .detailHead {
    display: flex;
  }

  .stageInput {
    flex: 1;
  }

  .numberInput {
    width: 80px;
  }

  .detailCheckbox {
    display: flex;
    justify-content: flex-start;
  }

  .detailConfirm {
    display: flex;
    justify-content: space-between;
  }

  .checkboxGroup {
    display: flex;
    align-items: center;
  }

  .hidden-checkbox {
    display: none;
  }

  .checkbox-label {
    display: inline-block;
    cursor: pointer;
    padding: 0.5rem 1rem;
    border-radius: 0.25rem;
    text-align: center;
    font-weight: 700;
    font-size: small;
    line-height: 1.5;
    background-color: #6c757d;
    color: #fff;
    border: 1px solid #6c757d;
    transition: background-color 0.3s, border-color 0.3s, box-shadow 0.3s;
  }

  .hidden-checkbox:checked + .checkbox-label {
    background-color: darkgreen;
    border-color: darkgreen;
  }

  .checkbox-label:active {
    background-color: #004085;
    box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.2);
  }

  .checkbox-label i {
    margin-left: 0.5rem;
  }
</style>

<script id="docTemplate" type="text/x-handlebars-template">
  <header class='commandPanel'>
    <h1>Відвантаження</h1>
    <i id='closeDocInfo' class='bi bi-x-circle commandBtn'></i>
  </header>
  <div class='docTitle'>
    <div class='docNumber'><i class='bi bi-truck'></i> {{НомерПоездкиЗаДень}}</div>
    <div class='docName {{className}}'>{{ВидОперации}}</div>
    <div class='docDateEvent'>{{ДатаСобытияФормат}}</div>
  </div>

  {{#each Детали}}
    <div id='details'>
      <div class='detailHead'>
        <input
          type='text'
          class='form-control controledInput stageInput'
          placeholder=''
          value='{{Этап.Наименование}}'
        />
        <input type='number' class='form-control controledInput numberInput' placeholder='' value='{{Количество}}' />
      </div>

      <div class='detailConfirm'>
        <div class='checkboxGroup'>
          <input
            type='checkbox'
            class='controledInput hidden-checkbox form-check-input'
            id='confirmDemz{{НомерСтроки}}'
            checked='{{ПідтвердженняДЕМЗ}}'
          />
          <label for='confirmDemz{{НомерСтроки}}' class='btn btn-primary checkbox-label'>ДЕМЗ
            <i class='bi bi-check'></i></label>
        </div>
        <div class='checkboxGroup'>
          <input
            type='checkbox'
            class='controledInput hidden-checkbox form-check-input'
            id='confirmQpartDemz{{НомерСтроки}}'
            checked='{{ПідтвердженняQpart}}'
          />
          <label for='confirmQpartDemz{{НомерСтроки}}' class='btn btn-primary checkbox-label'>QPart
            <i class='bi bi-check'></i></label>
        </div>
      </div>

      <div class='detailCheckbox'>
        <div class='checkboxGroup'>
          <label for='defectCheck{{НомерСтроки}}'>Брак</label>
          <input type='checkbox' class='controledInput' id='defectCheck{{НомерСтроки}}' checked='{{Брак}}' />
        </div>
        <div class='checkboxGroup'>
          <label for='reworking{{НомерСтроки}}'>Дороботка</label>
          <input type='checkbox' class='controledInput' id='reworking{{НомерСтроки}}' checked='{{Дороботка}}' />
        </div>

      </div>
    </div>
  {{/each}}
  <!-- <div id='tableForm'>
    <table class='inputTable' id='inputTable'>
      <thead>
        <tr>
          <th class='stage'>Етап</th>
          <th class='number'>К-ть</th>
          <th class='defect'>Брак</th>
          <th class='confirm'></th>
        </tr>
      </thead>
      <tbody>
        {{#each Детали}}
          <tr>
            <td class='stageTd'>
              <input
                type='text'
                class='form-control controledInput stageInput'
                placeholder=''
                value='{{Этап.Наименование}}'
              />
              <span class='removeRowBtn'><i class='bi bi-x'></i></span>
            </td>
            <td><input
                type='number'
                class='form-control controledInput numberInput'
                placeholder=''
                value='{{Количество}}'
              /></td>
            <td><input type='checkbox' class='controledInput' id='defectCheck' checked='{{Брак}}' /></td>
          </tr>
        {{/each}}
      </tbody>
    </table>
  </div> -->

  {{#if ФайлыДемз}}
    <div class='demzGallery'>
      <div class='galleryTitle'>Фото ДЕМЗ</div>
      <div class='imgContainer attachedImgContainer'>
        {{#each ФайлыДемз}}
          <div class='attachedImg'>
            <img
              class='src-source source'
              src-source='storage/{{ИД}}/{{ИД}}/{{Файл}}'
              src='storage/{{ИД}}/{{ИД}}/{{Файл}}'
              alt='Image'
            />
            <img class='preview' src='storage/{{ИД}}/{{ИД}}/p{{Файл}}' />
          </div>
        {{/each}}
      </div>
      <div class='btnAddPhoto'>
        <input
          type='file'
          id='makePhoto{{ВидОперации}}'
          accept='image/*'
          capture='environment'
          multiple
          style='display: none'
        />
        <label for='makePhoto{{ВидОперации}}'><i class='bi bi-camera' id='makePhotoButton'></i></label>
        <input type='file' id='downloadPhoto{{ВидОперации}}' accept='image/*' style='display: none' />
        <label for='downloadPhoto{{ВидОперации}}'><i class='bi bi-download' id='downloadPhotoButton'></i></label>
      </div>
    </div>
  {{/if}}

  {{#if ФайлыQpart}}
    <div class='qpartGallery'>
      <div class='galleryTitle'>Фото QPart</div>
      <div class='imgContainer attachedImgContainer'>
        {{#each ФайлыQpart}}
          <div class='attachedImg'>
            <img
              class='src-source source'
              src-source='storage/{{ИД}}/{{ИД}}/{{Файл}}'
              src='storage/{{ИД}}/{{ИД}}/{{Файл}}'
              alt='Image'
            />
            <img class='preview' src='storage/{{ИД}}/{{ИД}}/p{{Файл}}' />
          </div>
        {{/each}}
      </div>
      <div class='btnAddPhoto'>
        <input
          type='file'
          id='makePhoto{{ВидОперации}}'
          accept='image/*'
          capture='environment'
          multiple
          style='display: none'
        />
        <label for='makePhoto{{ВидОперации}}'><i class='bi bi-camera' id='makePhotoButton'></i></label>
        <input type='file' id='downloadPhoto{{ВидОперации}}' accept='image/*' style='display: none' />
        <label for='downloadPhoto{{ВидОперации}}'><i class='bi bi-download' id='downloadPhotoButton'></i></label>
      </div>
    </div>
  {{/if}}
</script>

<div id="docInfo" style="display: none"></div>

<style>
  .docContainer {
    border: 1px solid lightgrey;
    border-radius: 5px;
    background-color: white;
    margin-bottom: 15px;
    padding: 5px;
    box-shadow: 2px 3px 5px #999;
    width: 100%;
  }

  .detailed {
    font-size: x-large;
  }

  .detailed .stage {
    width: 65%;
  }

  td {
    padding: 3px;
  }

  .count {
    width: 15%;
    text-align: right;
  }

  .confirm {
    width: 10%;
    display: none;
  }

  #confirmRow {
    transform: scale(2);
  }

  .brak {
    position: relative;
  }

  .numberInput {
    text-align: right;
  }

  .brak::after {
    content: 'брак';
    position: absolute;
    background-color: white;
    color: red;
    right: 5px;
    padding: 0 0 0 5px;
  }

  .docTitle {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 5px;
    font-size: large;
    padding: 0 3px;
  }

  .qpart-demz {
    background-color: darkgreen;
    color: white;
    padding: 2px 4px 0 4px;
    border-radius: 4px;
  }

  .demz-qpart {
    background-color: rgb(0, 38, 255);
    color: white;
    padding: 2px 4px 0 4px;
    border-radius: 4px;
  }

  .truck {
    width: 30%;
  }

  .calendar {
    width: 70%;
  }

  #docDate {
    text-align: center;
  }

  .bi-truck {
    font-size: x-large;
  }

  .bi-calendar {
    font-size: large;
  }
  .docNumber {
    width: 25%;
  }

  .docDateEvent {
    width: 25%;
    text-align: end;
  }

  .stageTd {
    position: relative;
    padding-left: 10px;
  }

  .removeRowBtn {
    color: red;
    font-weight: bold;
    font-size: x-large;
    position: absolute;
    left: 0px;
    top: 50%;
    transform: translateY(-50%);
    cursor: pointer;
  }

  #saveDoc {
    margin-left: auto;
  }

  .galleryTitle {
    font-size: x-large;
    width: 100%;
    text-align: center;
    margin-bottom: 10px;
  }
</style>

<script id="tileTemplate" type="text/x-handlebars-template">
  {{> docTitleTemplate}}
  {{> tableDetailsTemplate}}
</script>

<script id="docTitleTemplate" type="text/x-handlebars-template">
  <div class='docTitle'>
    <div class='docNumber'><i class='bi bi-truck'></i> {{НомерПоездкиЗаДень}}</div>
    <div class='docName {{className}}'>{{ВидОперации}}</div>
    <div class='docDateEvent'>{{ДатаСобытияФормат}}</div>
  </div>
</script>

<script id="tableDetailsTemplate" type="text/x-handlebars-template">
  <table class='detailed'>
    <tbody>
        {{#each Детали}}
          <tr>
            <td class='stage {{#if Брак}}brak{{/if}}'>{{Этап.Наименование}}</td>
            <td class='count'>{{Количество}} шт</td>
            <td class='confirm'>
              <input type="checkbox" class="controledInput" id="confirmRow" value="">
            </td>
          </tr>
        {{/each}}
    </tbody>
  </table>
</script>

<script id="photoGallery" type="text/x-handlebars-template">
  <div class='galleryTitle'>{{title}}</div>
  <div class='imgContainer attachedImgContainer'>
    {{#each Файлы}}
      <div class='attachedImg'>
        <img
          class='src-source source'
          src-source='storage/{{ИД}}/{{ИД}}/{{Файл}}'
          src='storage/{{ИД}}/{{ИД}}/{{Файл}}'
          alt='Image'
        />
        <img class='preview' src='storage/{{ИД}}/{{ИД}}/p{{Файл}}' />
      </div>
    {{/each}}
  </div>
  <div class='btnAddPhoto'>
    <input
      type='file'
      id='makePhoto{{ВидОперации}}'
      accept='image/*'
      capture='environment'
      multiple
      style='display: none'
    />
    <label for='makePhoto{{ВидОперации}}'><i class='bi bi-camera' id='makePhotoButton'></i></label>
    <input type='file' id='downloadPhoto{{ВидОперации}}' accept='image/*' style='display: none' />
    <label for='downloadPhoto{{ВидОперации}}'><i class='bi bi-download' id='downloadPhotoButton'></i></label>
  </div>
</script>

<script>
  $(document).ready(function () {
    const platesID = '#qpart_demz';
    pageUID = 'ce4e3ff4-50d6-11ef-825f-000c29006152';
    userRights = $('#menu').data('userRight')[pageUID];
    const uid = user.uid;
    let autocompleteStage;

    console.log(
      'userRights, !userRights.canCreateDEMZQPART',
      userRights,
      userRights.canCreateQPART,
      userRights.canCreateDEMZ
    );
    !userRights.canCreateDEMZ ? $('#btnDemz').hide() : '';
    !userRights.canCreateQPART ? $('#btnQpart').hide() : '';

    if (userRights.canCreateDEMZ && userRights.canCreateQPART) {
      console.log('userRights have all rights');
      $('.btnDesctiption').show();
    }

    const docTemplateSource = document.getElementById('docTemplate').innerHTML;
    const docTemplate = Handlebars.compile(docTemplateSource);

    Handlebars.registerPartial('docTitleTemplate', $('#docTitleTemplate').html());
    Handlebars.registerPartial('tableDetailsTemplate', $('#tableDetailsTemplate').html());

    const source = document.getElementById('tileTemplate').innerHTML;
    const template = Handlebars.compile(source);

    const defaultParam = {
      page: 0,
      limit: 20,
    };

    $(platesID).data('defaultParam', defaultParam);
    initListPlate(platesID, true);

    callbackAfterLoadData = function (response) {
      const param = $(platesID).data('param');
      // response.passRender = true;
      param.date = response.nextDate;
      $(platesID).data('param', param);
      autocompleteStage = response.СписокЭтапов;
    };

    callbackForRender = function (data) {
      containerForTile = `#${data.uid}`;
      if ($(containerForTile).length === 0) return;
      data.className = data.ВидОперации === 'QPART => ДЕМЗ' ? 'qpart-demz' : 'demz-qpart';
      const html = template(data);
      $(containerForTile).html(html);
    };

    callbackClick = function (element) {
      const data = $(element).data('data');
      console.log('data', data);
      docInfoOpen(data);
    };

    function docInfoOpen(data = {}) {
      $('#main').hide();
      $('#docInfo').show();
      renderDoc(data);
    }

    function docInfoClose() {
      console.log('docInfoClose');
      $('#docInfo').hide();
      $('#main').show();
      $('#forTitle').empty();
      $('#forTable').empty();
      $('#forGalleryDemz').empty();
      $('#forGalleryQpart').empty();
      $('#inputTable tbody tr').not(':first').remove();
      $('#inputTable tbody tr:first').find('input').val('');
      $('#inputTable tbody tr:first').find('input[type="checkbox"]').prop('checked', false);
      $('#newDocForm').hide();
      $('.confirm').hide();
    }

    function renderExistDoc(data) {
      const dataForDemz = {
        ВидОперации: 'Demz-Qpart',
        Файлы: [
          {
            НомерСтроки: '1',
            ИД: 'a7607f7b-5975-11ef-8261-000c29006152',
            Файл: '0.png',
          },
          {
            НомерСтроки: '2',
            ИД: 'a7607f7b-5975-11ef-8261-000c29006152',
            Файл: '1.png',
          },
          {
            НомерСтроки: '3',
            ИД: 'a7607f7b-5975-11ef-8261-000c29006152',
            Файл: '2.png',
          },
        ],
      };

      const dataForQpart = {
        ВидОперации: 'Qpart-Demz',
        Файлы: [
          {
            НомерСтроки: '1',
            ИД: 'a7607f7b-5975-11ef-8261-000c29006152',
            Файл: '0.png',
          },
          {
            НомерСтроки: '2',
            ИД: 'a7607f7b-5975-11ef-8261-000c29006152',
            Файл: '1.png',
          },
          {
            НомерСтроки: '3',
            ИД: 'a7607f7b-5975-11ef-8261-000c29006152',
            Файл: '2.png',
          },
        ],
      };

      const titleTemplate = Handlebars.compile($('#docTitleTemplate').html());
      const tableDetailsTemplate = Handlebars.compile($('#tableDetailsTemplate').html());
      // const photoGallery = Handlebars.compile($('#photoGallery').html());
      const titleHtml = titleTemplate(data);
      const html = tableDetailsTemplate(data);
      // const galleryDemz = photoGallery(dataForDemz);
      // const galleryQpart = photoGallery(dataForQpart);
      $('#forTitle').html(titleHtml);
      $('#forTable').html(html);
      // $('#forGalleryDemz').html(galleryDemz);
      // $('#forGalleryQpart').html(galleryQpart);
      generatePhotoContainer(dataForDemz, 'demz');
      generatePhotoContainer(dataForQpart, 'qpart');
      $('.confirm').show();
    }

    function generatePhotoContainer(data, direction) {
      console.log('generatePhotoContainer');
      const titles = {
        demz: 'Фото з ДЕМЗ',
        qpart: 'Фото з QPart',
      };
      data.title = titles[direction];
      const photoGallery = Handlebars.compile($('#photoGallery').html());
      const gallery = photoGallery(data);
      if (direction === 'demz') {
        container = '#forGalleryDemz';
      }
      if (direction === 'qpart') {
        container = '#forGalleryQpart';
      }
      $(container).html(gallery);
    }

    function renderDoc(data = {}) {
      const dataForDemz = {
        ВидОперации: 'Demz-Qpart',
        Файлы: [
          {
            НомерСтроки: '1',
            ИД: 'a7607f7b-5975-11ef-8261-000c29006152',
            Файл: '0.png',
          },
          {
            НомерСтроки: '2',
            ИД: 'a7607f7b-5975-11ef-8261-000c29006152',
            Файл: '1.png',
          },
          {
            НомерСтроки: '3',
            ИД: 'a7607f7b-5975-11ef-8261-000c29006152',
            Файл: '2.png',
          },
        ],
      };

      data.ФайлыДемз = dataForDemz.Файлы;
      data.ФайлыQpart1 = dataForDemz.Файлы;

      const docContainer = $('#docInfo');
      console.log('docContainer, data', docContainer, data);
      const docHtml = docTemplate(data);
      console.log('docHtmls', docHtml);
      docContainer.html(docHtml);

      $('#closeDocInfo').on('click', function () {
        console.log('closeDocInfo');
        clickAnimate(this);
        docInfoClose();
      });
    }

    function renderNewDoc(direction) {
      console.log('userRights', userRights);
      // generatePhotoContainer({}, direction);
      if (direction === 'demz') {
        $('#docTypeQpart').hide();
        $('#docTypeDemz').show();
      }

      if (direction === 'qpart') {
        $('#docTypeQpart').show();
        $('#docTypeDemz').hide();
      }
      $('#docTitle').text(direction);
      $('#newDocForm').show();
    }

    $('#addNewQpart').on('click', function (event) {
      clickAnimate(this);
      console.log('addNew');
      const data = {
        ВидОперации: 'Qpart => Demz',
        Детали: [
          {
            Этап: {
              Наименование: '',
            },
          },
          {},
        ],
      };
      docInfoOpen(data);
    });

    $('#addNewDemz').on('click', function (event) {
      clickAnimate(this);
      console.log('addNew');
      const data = {
        ВидОперации: 'Demz => Qpart',
        Детали: [
          {
            Этап: {
              Наименование: '',
            },
          },
          {},
        ],
      };
      docInfoOpen(data);
    });

    // const autocompleteStage = ['Опція 1', 'Опція 2', 'Опція 3', 'Опція 4'];

    function initializeAutocomplete() {
      $('input.stageInput').autocomplete({
        source: autocompleteStage,
        minLength: 0,
        position: {
          my: 'left top',
          at: 'left bottom',
          collision: 'fit flip',
        },
        select: function (event, ui) {
          $(this).val(ui.item.label);
          $(this).data('value', ui.item.value);
          return false;
        },
      });
    }

    initializeAutocomplete();

    function addRow() {
      const newRow = `
             <tr >
              <td class='stageTd'>
                <input type="text" class="form-control controledInput stageInput" placeholder="" />
                <span class="removeRowBtn"><i class="bi bi-x"></i></span>
              </td>
              <td><input type="number" class="form-control controledInput numberInput" placeholder="" /></td>
              <td><input type="checkbox" class="controledInput" id="defectCheck" /></td>
            </tr>
        `;
      $('#inputTable tbody').append(newRow);
      initializeAutocomplete();
    }

    $(document).on('focus', 'input.controledInput', function () {
      console.log('focus on table');
      const $lastRow = $('#inputTable tbody tr:last-child');
      if ($(this).closest('tr').is($lastRow)) {
        addRow();
      }
    });

    $(document).on('click', '.removeRowBtn', function () {
      if ($('#inputTable tbody tr').length > 1) {
        $(this).closest('tr').remove();
      } else {
        $(this).closest('tr').find('input').val('');
        $(this).closest('tr').find('input[type="checkbox"]').prop('checked', false);
      }
    });

    function collectTableData() {
      const tableData = [];

      $('#inputTable tbody tr')
        .not(':last')
        .each(function () {
          console.log('collectTableData this', this);
          const detail = $(this).find('input.stageInput').data('value');
          const count = $(this).find('input.numberInput').val();
          const defect = $(this).find('input[type="checkbox"]').is(':checked');

          tableData.push({
            Деталь: detail,
            Количество: count,
            Брак: defect,
          });
        });

      $('#inputTable').data('data', tableData);
    }

    $('#inputTable').on('blur', 'input', function () {
      collectTableData();
    });

    $('#inputTable').on('change', 'input[type="checkbox"]', function () {
      collectTableData();
    });

    function getMediaFiles() {
      const mediaFiles = [];
      $('#imgContainer .attachedImg .src-source').each(function (index) {
        const src = $(this).attr('src-source');
        const name = (index + 1).toString() + '.png';
        mediaFiles.push({
          name: name,
          data: dataURLtoBlob(src),
        });
      });
      console.log('Generated media files:', mediaFiles);
      return mediaFiles;
    }

    function dataURLtoBlob(dataURL) {
      const [header, data] = dataURL.split(',');
      const mime = header.match(/:(.*?);/)[1];
      const binary = atob(data);
      const array = [];
      for (let i = 0; i < binary.length; i++) {
        array.push(binary.charCodeAt(i));
      }
      return new Blob([new Uint8Array(array)], { type: mime });
    }

    function sendDataTo1C(data, method = 'GET', callback) {
      universalRequest(
        '/app/qpart_demz',
        method,
        data,
        {},
        function onSuccess(response) {
          console.log('Success callback:', response);
          if (response.error) {
            toastr.error('Помилка звязку', response['Причина']);
          } else {
            toastr.success('Дані збережено');
            if (typeof callback === 'function') {
              callback(response);
            }
          }
        },
        function onError(error) {
          toastr.error('Error', error);
        },
        function onComplete() {}
      );
    }

    $('#saveDoc').on('click', async function () {
      console.log('saveDoc on click');
      clickAnimate(this);
      const mediaFiles = getMediaFiles();

      // try {
      //   await saveFilesToStorage(mediaFiles, uid, uid);
      //   console.log('Files saved successfully!');
      // } catch (error) {
      //   console.error('Error saving files:', error);
      // }

      const tripNumber = $('#tripNumber').val().trim();
      console.log('tripNumber', tripNumber, '#tripNumber');
      if (!tripNumber) {
        toastr.error('Заповніть номер відправлення');
        $('#tripNumber').focus();
        return;
      }

      const docDate = $('#docDate').val();
      if (docDate === '') {
        toastr.error('Заповніть дату відправлення');
        $('#docDate').focus();
        return;
      }

      const details = $('#inputTable').data('data');

      console.log('tripNumber, docDate, details', tripNumber, docDate, details);

      NProgress.start();
      console.log('statusZakupka', statusZakupka);

      let media = [];
      let names = [];
      $('#imgContainer')
        .children()
        .each((index, child) => {
          const blob = $(child).children('.source').data('blob');
          const blobPreview = $(child).children('.preview').data('blob');

          let file = { data: blob };
          let filePreview = { data: blobPreview };
          if (blob.type === 'image/jpeg') {
            file.name = index.toString() + '.png';
            filePreview.name = 'p' + index.toString() + '.png';
          } else if (blob.type === 'video/mp4') {
            file.name = index.toString() + '.mp4';
            filePreview.name = 'p' + index.toString() + '.png';
          } else {
            file.name = index.toString() + '.none';
            console.log('unknown type of blob', blob.type, file.name);
          }

          media.push(file);
          media.push(filePreview);
          names.push(file.name);
        });

      const data = {
        details: details,
        tripNumber: tripNumber,
        docData: docDate,
        files: names,
      };

      console.log('data from qpart_demz', data);

      sendDataTo1C(data, 'POST', async function (response) {
        console.log('sendDataTo1C');
        await saveFilesToStorage(media, response.uid, response.uid);
        docInfoClose();
      });
      NProgress.done();
    });

    // $('#cancelDoc').on('click', function () {
    //   docInfoClose();
    // });

    function handleFileSelection(files, container) {
      console.log('handleFileSelection container', container);
      const imgContainer = $(container);

      for (let i = 0; i < files.length; i++) {
        const file = files[i];
        const reader = new FileReader();

        reader.onload = function (event) {
          const imgWrapper = $('<div>').addClass('attachedImg');

          const img = $('<img>')
            .addClass('src-source')
            .addClass('source')
            .attr('src-source', URL.createObjectURL(file))
            .attr('src', URL.createObjectURL(file))
            .attr('alt', 'Image')
            .data('blob', file)
            .css({
              'object-fit': 'cover',
            });

          imgWrapper.append(img);

          resizeImage(file)
            .then(resizedImageBlob => {
              const previewImg = $('<img>')
                .addClass('preview')
                .attr('src', URL.createObjectURL(resizedImageBlob))
                .data('blob', resizedImageBlob);

              imgWrapper.append(previewImg);
            })
            .catch(error => {
              console.error(error);
            });

          imgContainer.append(imgWrapper);
        };

        reader.readAsDataURL(file);
      }
    }

    $(document).on('click', '.attachedImg', function () {
      mediaviewer(this);
    });

    //   $('#makePhoto').on('change', function (event) {
    //     const files = event.target.files;
    //     if (files.length > 0) {
    //       handleFileSelection(files, this);
    //       $(this).val('');
    //     }
    //   });

    //  $('#downloadPhoto').on('change', function (event) {
    //     const files = event.target.files;

    //     if (this)
    //       if (files.length > 0) {
    //         handleFileSelection(files, container);
    //       }
    //   });

    $(document).on('change', 'input[type="file"]', function (event) {
      const $photoContainer = $(this).closest('.photoContainer');
      const $imgContainer = $photoContainer.find('.imgContainer');

      const files = event.target.files;
      if (files.length > 0) {
        handleFileSelection(files, $imgContainer);
        $(this).val('');
      }
    });
  });
</script>
